fig <- fig |> layout(
dragmode='drawopenpath', # INCLUI A FERRAMENTA PARA DESENHO
newshape=list(line = list(color='cyan', opacity = 0.5 )),
#title = "Tempos médios / 2021",
uniformtext=list(minsize=8, mode='hide'),
font = list(family = "Calibri", color = "#294661", size = 14.5),
xaxis = list(title = "População prisional"),
yaxis = list(title = "Taxa de presos sem Condenação"),
legend = list(orientation = "v")
)
# CONFIGURACAO DAS FORMAS DE DESENHO NO GRAFICO
fig <- config(
fig,
modeBarButtonsToAdd = list(
'drawline',
'drawopenpath',
'drawclosedpath',
'drawcircle',
'drawrect',
'eraseshape'
)
)
fig
t1 <- rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 5),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
dplyr::select(
Grupo = cluster,
`Unid. Federativa` = uf,
`Município` = municipio,
`Pop. Municipal`= populacao_mun,
`Pop. Prisional` = pop_prisional_total,
`Pop. Pris. sem condenação` = pop_prisional_provisorios_total,
`Taxa de presos sem condenação` = tx_provisorios_total,
`Qtd. mortes violentas` = mvi_2022,
`Taxa de mortes violentas` = tx_mvi_2022,
`Nota geral` = nt_geral,
Prioridade = Prioridade
)
formattable::formattable(
t1,
align = c("c","l","l","l","l","l","l","l","l","l","c"),
list(
`Grupo` = color_tile("orange","lightblue"),
`Unid. Federativa` = color_tile("orange","lightblue"),
`Município` = color_tile("orange","lightblue"),
`Pop. Municipal` = color_bar("lightgrey"),
`Pop. Prisional`= color_bar("lightgrey"),
`Pop. Pris. sem condenação`= color_bar("lightgrey"),
`Taxa de presos sem condenação`= color_bar("lightgrey"),
`Qtd. mortes violentas`= color_bar("lightgrey"),
`Taxa de mortes violentas`= color_bar("lightgrey"),
`Nota geral`= color_bar("lightblue"),
`Prioridade`= color_tile("orange","lightblue")
))|>
formattable::as.datatable(
extensions = 'Buttons',
escape = FALSE,
#caption = "Quantidade de pessoas cumprindo penas estratificadas por tipo de custódia (modalidade) e sexo.",
rownames = FALSE,
class='display', #'hover cell-border stripe',
filter = "top",
style = "bootstrap5",
selection = c("multiple"), #c("multiple", "single", "none"),
options = list(
dom='Bfrtip',
buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
autoFill = TRUE,
colReorder = TRUE,
pageLength = 10,
lengthMenu = seq(10,max(nrow(t1))+10,10),
autoWidth = TRUE,
initComplete = DT::JS(
"function(settings, json) {",
#"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});", - #CONFIGURACAO DO CABECALHO
"$('body').css({'font-family': 'Calibri'});",
"}"
),
language = list(
info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
)
)
)
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
filter(Prioridade <= 27) |>
leaflet::leaflet() |>
leaflet::addTiles() |>
leaflet::addAwesomeMarkers(
~longitude,
~latitude,
label= ~ nt_geral,
popup = ~municipio
)
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(
nt_geral = max(nt_geral),
Prioridade = max(Prioridade),
municipio = municipio,
latitude = latitude,
longitude = longitude,
cluster = cluster
)
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(
nt_geral = max(nt_geral),
Prioridade = max(Prioridade),
municipio = municipio,
latitude = latitude,
longitude = longitude,
cluster = cluster
) |>
filter(Prioridade <= 27) |>
leaflet::leaflet() |>
leaflet::addTiles() |>
leaflet::addAwesomeMarkers(
~longitude,
~latitude,
label= ~ nt_geral,
popup = ~municipio
)
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(
nt_geral = max(nt_geral),
Prioridade = max(Prioridade),
municipio = municipio,
latitude = latitude,
longitude = longitude,
cluster = max(cluster)
) |>
#filter(Prioridade <= 27) |>
leaflet::leaflet() |>
leaflet::addTiles() |>
leaflet::addAwesomeMarkers(
~longitude,
~latitude,
label= ~ nt_geral,
popup = ~municipio
)
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(
nt_geral = max(nt_geral),
Prioridade = max(Prioridade),
municipio = municipio,
latitude = latitude,
longitude = longitude,
cluster = cluster
) |>
#filter(Prioridade <= 27) |>
leaflet::leaflet() |>
leaflet::addTiles() |>
leaflet::addAwesomeMarkers(
~longitude,
~latitude,
label= ~ nt_geral,
popup = ~municipio
)
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(
nt_geral = max(nt_geral),
Prioridade = max(Prioridade),
municipio = municipio,
latitude = latitude,
longitude = longitude,
cluster = cluster
)
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(
nt_geral = max(nt_geral),
Prioridade = max(Prioridade),
municipio = municipio,
latitude = latitude,
longitude = longitude,
cluster = cluster
)
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(
nt_geral = max(nt_geral),
Prioridade = max(Prioridade)
)
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2)
#cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(
nt_geral = max(nt_geral),
Prioridade = max(Prioridade)
)
filtro <- rel_cluster3 |>
rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(Prioridade = max(Prioridade))
filtro <- rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(Prioridade = max(Prioridade))
View(filtro)
filtro <- rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(Prioridade = min(Prioridade))
View(filtro)
rel_cluster3 |>
filter(Prioridade = filtro$Prioridade)
rel_cluster3 |>
filter(Prioridade == filtro$Prioridade)
rel_cluster3 |>
filter(Prioridade == filtro$Prioridade)
teste <- rel_cluster3 |>
filter(Prioridade == filtro$Prioridade)
View(teste)
teste <- rel_cluster3 |>
filter(Prioridade %in% filtro$Prioridade)
View(teste)
filter(Prioridade %in% filtro$Prioridade)
teste <- rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
filter(Prioridade %in% filtro$Prioridade)
View(teste)
filtro <- rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
group_by(uf) |>
reframe(Prioridade = min(Prioridade))
tab_uf <- rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
filter(Prioridade %in% filtro$Prioridade)
tab_uf |>
leaflet::leaflet() |>
leaflet::addTiles() |>
leaflet::addAwesomeMarkers(
~longitude,
~latitude,
label= ~ nt_geral,
popup = ~municipio
)
View(tab_uf)
t1 <- tab_uf |>
dplyr::select(
Grupo = cluster,
`Unid. Federativa` = uf,
`Município` = municipio,
`Pop. Municipal`= populacao_mun,
`Pop. Prisional` = pop_prisional_total,
`Pop. Pris. sem condenação` = pop_prisional_provisorios_total,
`Taxa de presos sem condenação` = tx_provisorios_total,
`Qtd. mortes violentas` = mvi_2022,
`Taxa de mortes violentas` = tx_mvi_2022,
`Nota geral` = nt_geral,
Prioridade = Prioridade
)
formattable::formattable(
t1,
align = c("c","l","l","l","l","l","l","l","l","l","c"),
list(
`Grupo` = color_tile("orange","lightblue"),
`Unid. Federativa` = color_tile("orange","lightblue"),
`Município` = color_tile("orange","lightblue"),
`Pop. Municipal` = color_bar("lightgrey"),
`Pop. Prisional`= color_bar("lightgrey"),
`Pop. Pris. sem condenação`= color_bar("lightgrey"),
`Taxa de presos sem condenação`= color_bar("lightgrey"),
`Qtd. mortes violentas`= color_bar("lightgrey"),
`Taxa de mortes violentas`= color_bar("lightgrey"),
`Nota geral`= color_bar("lightblue"),
`Prioridade`= color_tile("orange","lightblue")
))|>
formattable::as.datatable(
extensions = 'Buttons',
escape = FALSE,
#caption = "Quantidade de pessoas cumprindo penas estratificadas por tipo de custódia (modalidade) e sexo.",
rownames = FALSE,
class='display', #'hover cell-border stripe',
filter = "top",
style = "bootstrap5",
selection = c("multiple"), #c("multiple", "single", "none"),
options = list(
dom='Bfrtip',
buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
autoFill = TRUE,
colReorder = TRUE,
pageLength = 10,
lengthMenu = seq(10,max(nrow(t1))+10,10),
autoWidth = TRUE,
initComplete = DT::JS(
"function(settings, json) {",
#"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});", - #CONFIGURACAO DO CABECALHO
"$('body').css({'font-family': 'Calibri'});",
"}"
),
language = list(
info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
)
)
)
t1 <- rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
filter(Prioridade <= 27)
formattable::formattable(
t1,
align = c("c","l","l","l","l","l","l","l","l","l","c"),
list(
`Grupo` = color_tile("orange","lightblue"),
`Unid. Federativa` = color_tile("orange","lightblue"),
`Município` = color_tile("orange","lightblue"),
`Pop. Municipal` = color_bar("lightgrey"),
`Pop. Prisional`= color_bar("lightgrey"),
`Pop. Pris. sem condenação`= color_bar("lightgrey"),
`Taxa de presos sem condenação`= color_bar("lightgrey"),
`Qtd. mortes violentas`= color_bar("lightgrey"),
`Taxa de mortes violentas`= color_bar("lightgrey"),
`Nota geral`= color_bar("lightblue"),
`Prioridade`= color_tile("orange","lightblue")
))|>
formattable::as.datatable(
extensions = 'Buttons',
escape = FALSE,
#caption = "Quantidade de pessoas cumprindo penas estratificadas por tipo de custódia (modalidade) e sexo.",
rownames = FALSE,
class='display', #'hover cell-border stripe',
filter = "top",
style = "bootstrap5",
selection = c("multiple"), #c("multiple", "single", "none"),
options = list(
dom='Bfrtip',
buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
autoFill = TRUE,
colReorder = TRUE,
pageLength = 10,
lengthMenu = seq(10,max(nrow(t1))+10,10),
autoWidth = TRUE,
initComplete = DT::JS(
"function(settings, json) {",
#"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});", - #CONFIGURACAO DO CABECALHO
"$('body').css({'font-family': 'Calibri'});",
"}"
),
language = list(
info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
)
)
)
t1 <- rel_cluster3 |>
mutate(
nt_geral = round(nt_geral, digits = 2),
cluster = factor(cluster, level = c(3,4,2,1))
) |>
arrange(cluster,desc(nt_geral)) |>
mutate(Prioridade = seq(1,nrow(rel_cluster3))) |>
filter(Prioridade <= 27) |>
dplyr::select(
Grupo = cluster,
`Unid. Federativa` = uf,
`Município` = municipio,
`Pop. Municipal`= populacao_mun,
`Pop. Prisional` = pop_prisional_total,
`Pop. Pris. sem condenação` = pop_prisional_provisorios_total,
`Taxa de presos sem condenação` = tx_provisorios_total,
`Qtd. mortes violentas` = mvi_2022,
`Taxa de mortes violentas` = tx_mvi_2022,
`Nota geral` = nt_geral,
Prioridade = Prioridade
)
formattable::formattable(
t1,
align = c("c","l","l","l","l","l","l","l","l","l","c"),
list(
`Grupo` = color_tile("orange","lightblue"),
`Unid. Federativa` = color_tile("orange","lightblue"),
`Município` = color_tile("orange","lightblue"),
`Pop. Municipal` = color_bar("lightgrey"),
`Pop. Prisional`= color_bar("lightgrey"),
`Pop. Pris. sem condenação`= color_bar("lightgrey"),
`Taxa de presos sem condenação`= color_bar("lightgrey"),
`Qtd. mortes violentas`= color_bar("lightgrey"),
`Taxa de mortes violentas`= color_bar("lightgrey"),
`Nota geral`= color_bar("lightblue"),
`Prioridade`= color_tile("orange","lightblue")
))|>
formattable::as.datatable(
extensions = 'Buttons',
escape = FALSE,
#caption = "Quantidade de pessoas cumprindo penas estratificadas por tipo de custódia (modalidade) e sexo.",
rownames = FALSE,
class='display', #'hover cell-border stripe',
filter = "top",
style = "bootstrap5",
selection = c("multiple"), #c("multiple", "single", "none"),
options = list(
dom='Bfrtip',
buttons=c('copy', 'csv', 'excel', 'print', 'pdf'),
autoFill = TRUE,
colReorder = TRUE,
pageLength = 10,
lengthMenu = seq(10,max(nrow(t1))+10,10),
autoWidth = TRUE,
initComplete = DT::JS(
"function(settings, json) {",
#"$(this.api().table().header()).css({'background-color': '#000', 'color': '#fff'});", - #CONFIGURACAO DO CABECALHO
"$('body').css({'font-family': 'Calibri'});",
"}"
),
language = list(
info = 'Mostrando de _START_ para _END_ em um total de _TOTAL_ registros',
paginate = list(previous = 'Anterior', `next` = 'Seguinte'),
url = '//cdn.datatables.net/plug-ins/1.10.11/i18n/Portuguese-Brasil.json'
)
)
)
